---
- hosts: localhost
  connection: local
  become: yes
  tasks:
    - name: Ensure no apt-get process is running
      command: "killall apt-get"
      ignore_errors: yes

    - name: Install boto3
      apt:
        name: python3-pip
        state: present

    - name: Install boto
      pip:
        name: boto
        executable: pip3

    - name: Launch EC2 instance
      ec2:
        key_name: your-key-pair
        instance_type: t2.micro
        image: ami-0c55b159cbfafe1f0  # Ubuntu 20.04 LTS
        wait: yes
        region: us-east-1
        group: web-security-group
        vpc_subnet_id: subnet-xxxxxxxxxxxxxx
        assign_public_ip: yes
      register: ec2

    - name: Wait for SSH to become available
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        delay: 60
        timeout: 320
        state: started
      with_items: "{{ ec2.instances }}"

    - name: Add EC2 instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webserver
      with_items: "{{ ec2.instances }}"

- hosts: webserver
  become: yes
  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Copy HTML file
      copy:
        src: index.html
        dest: /var/www/html/index.html
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Copy Nginx configuration file
      copy:
        src: nginx.conf
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'

    - name: Ensure symbolic link does not exist
      command: "rm -f /etc/nginx/sites-enabled/default"
      ignore_errors: yes

    - name: Enable site
      command: ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

    - name: Ensure firewall rules are configured
      ufw:
        rule: allow
        name: 'Nginx Full'
        state: enabled

    - name: Start Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Redirect HTTP to HTTPS
      copy:
        content: |
          server {
              listen 80;
              server_name your-domain.com;
              return 301 https://$host$request_uri;
          }
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'

    - name: Generate self-signed SSL certificate
      openssl_certificate:
        path: /etc/nginx/ssl/nginx.crt
        privatekey_path: /etc/nginx/ssl/nginx.key
        common_name: your-domain.com

    - name: Update Nginx configuration for SSL
      copy:
        src: nginx_ssl.conf
        dest: /etc/nginx/sites-available/default
        owner: root
        group: root
        mode: '0644'

    - name: Restart Nginx
      service:
        name: nginx
        state: restarted

    # - name: Test web server with curl
    #   command: curl -k https://localhost
    #   register: curl_output

    - name: Test web server with curl
      command: curl -k https://{{ item.public_ip }}:80
      register: curl_output
      with_items: "{{ ec2.instances }}"
  

    - name: Print curl output
      debug:
        var: curl_output.stdout_lines
